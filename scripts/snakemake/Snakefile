#clark rules
rule clark_classify_snakemake:
    output: "cla_{monsternr}_report.csv"
    input:  "cla_{monsternr}_out.csv"
    shell:  "./clark_classifyall_snakemake.sh {output} {input}" 

rule clark_runall_snakemake:
    output: "cla_{monsternr}_out.csv"
    input:  "{monsternr}_R1.fastq"
    shell:  "./clark_runall_snakemake.sh {output} {input}"

#kraken2 rules
rule kraken2_isolateGS_snakemake:
    output: "kra_{monsternr}_report.csv"
    input:  "kra_{monsternr}_fullreport"
    shell:  "./kraken2_isolateGS_snakemake.sh {input} {output}"

rule kraken2_runall_snakemake:
    output: "kra_{monsternr}_fullreport"
    input:  "{monsternr}_R1.fastq.gz"
    shell:  "./kraken2_runall_snakemake.sh {input} {output}"

#kaiju rules
rule kaiju_runall_snakemake:
    output: "kai_{monsternr}_out"
    input: "{monsternr}_R1.fastq.gz"
    shell:  "./kaiju_runall_snakemake.sh {input} {output}"

rule kaiju_classify_snakemake:
    output: "kai_{monsternr}_genus.csv" , "kai_{monsternr}_species.csv"
    input:  "kai_{monsternr}_out"
    shell:  "./kaiju_classifyall_snakemake.sh {input} {output}"

rule kaiju_combine_snakemake:
    output: "kai_{monsternr}_report.csv"
    input:  "kai_{monsternr}_genus.csv" , "kai_{monsternr}_species.csv"
    params: monsterID = "{monsternr}"
    shell:  "python kaiju_combine_snakemake.py"  +" "+  "kai_{params.monsterID}_genus.csv"  +" "+  "kai_{params.monsterID}_species.csv"  +" "+  "{params.monsterID}"

#combinetable
rule combine2table_snakemake:
    output: "combined_{monsternr}_file.csv"
    input:  "cla_{monsternr}_report.csv" , "kra_{monsternr}_report.csv" , "kai_{monsternr}_report.csv"
    params: monsterID = "{monsternr}"
    shell:  "python combine2table_snakemake.py"  +" "+  "cla_{params.monsterID}_report.csv"  +" "+  "kra_{params.monsterID}_report.csv"  +" "+  "kai_{params.monsterID}_report.csv"  +" "+  "{params.monsterID}"